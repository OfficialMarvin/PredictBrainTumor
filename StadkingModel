# imports
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier, StackingClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

data = pd.read_csv("https://raw.githubusercontent.com/OfficialMarvin/PredictBrainTumor/main/TCGA_GBM_LGG_Mutations_all.csv")

X = data.drop('Grade', axis=1)
y = data['Grade']

# turn categorical to dummy vars
X = pd.get_dummies(X, drop_first=True)

# split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=420)

# scale features
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# choose classifiers
classifier1 = RandomForestClassifier(n_estimators=100, random_state=420)
classifier2 = LogisticRegression()
classifier3 = SVC(probability=True)

# stacking classifiers
stacked_model = StackingClassifier(
    estimators=[
        ('rf', classifier1),
        ('lr', classifier2),
        ('svm', classifier3)],
    final_estimator=LogisticRegression(),
    stack_method='predict_proba' #using probability instead of prediction to stack
)

# fit model
stacked_model.fit(X_train, y_train)

# predict on test data
y_pred = stacked_model.predict(X_test)

# find accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy}')
